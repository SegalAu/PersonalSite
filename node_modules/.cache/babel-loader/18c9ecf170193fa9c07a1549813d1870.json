{"ast":null,"code":"// add fake Function#toString\n// for correct work wrapped methods / constructors with methods like LoDash isNative\nvar global = require('./$.global'),\n    hide = require('./$.hide'),\n    SRC = require('./$.uid')('src'),\n    TO_STRING = 'toString',\n    $toString = Function[TO_STRING],\n    TPL = ('' + $toString).split(TO_STRING);\n\nrequire('./$.core').inspectSource = function (it) {\n  return $toString.call(it);\n};\n\n(module.exports = function (O, key, val, safe) {\n  if (typeof val == 'function') {\n    val.hasOwnProperty(SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n    val.hasOwnProperty('name') || hide(val, 'name', key);\n  }\n\n  if (O === global) {\n    O[key] = val;\n  } else {\n    if (!safe) delete O[key];\n    hide(O, key, val);\n  }\n})(Function.prototype, TO_STRING, function toString() {\n  return typeof this == 'function' && this[SRC] || $toString.call(this);\n});","map":null,"metadata":{},"sourceType":"script"}