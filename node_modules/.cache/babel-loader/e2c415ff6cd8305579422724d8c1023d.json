{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Segal Au\\\\Professional\\\\site\\\\personalsite\\\\src\\\\app\\\\components\\\\FABNav.js\";\nimport React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n/* Speed Dial Components */\n\nimport SpeedDial from '@material-ui/lab/SpeedDial';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport SpeedDialAction from '@material-ui/lab/SpeedDialAction';\n/* Icons */\n\nimport QuestionAnswerIcon from '@material-ui/icons/QuestionAnswer';\nimport FaceIcon from '@material-ui/icons/Face';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport BuildIcon from '@material-ui/icons/Build';\nimport WorkIcon from '@material-ui/icons/Work';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport ExploreIcon from '@material-ui/icons/Explore';\nimport AppsIcon from '@material-ui/icons/Apps';\n/* Anchor Scroll */\n\nimport ScrollableAnchor from 'react-scrollable-anchor';\nimport { configureAnchors } from 'react-scrollable-anchor';\nimport { goToTop } from 'react-scrollable-anchor';\nimport { goToAnchor } from 'react-scrollable-anchor';\nconst actions = [{\n  icon: /*#__PURE__*/React.createElement(FaceIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }\n  }),\n  name: \"About\"\n}, {\n  icon: /*#__PURE__*/React.createElement(WorkIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }\n  }),\n  name: \"Experience\"\n}, {\n  icon: /*#__PURE__*/React.createElement(BuildIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }\n  }),\n  name: \"Projects\"\n}, {\n  icon: /*#__PURE__*/React.createElement(AssignmentIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }\n  }),\n  name: \"Resume\"\n}, {\n  icon: /*#__PURE__*/React.createElement(AppsIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }\n  }),\n  name: \"Contact\"\n}];\n\nconst styles = theme => ({\n  speedDialClass: {},\n  button: {\n    background: \"transparent\",\n    color: \"white\",\n    \"&:hover\": {\n      background: \"transparent\",\n      color: \"#3f51b5\"\n    }\n  },\n  fab: {\n    padding: 0,\n    margin: 0,\n    borderStyle: \"solid\",\n    borderWidth: 2,\n    borderColor: \"white\",\n    background: \"transparent\",\n    \"&:hover\": {\n      background: \"transparent\"\n    }\n  }\n});\n\nclass FABNav extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      direction: \"down\",\n      profile: false,\n      experience: false,\n      project: false\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleOpen = this.handleOpen.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.goToProfile = this.goToProfile.bind(this);\n    this.goToExperience = this.goToExperience.bind(this);\n    this.goToProfile = this.goToProfile.bind(this);\n    this.goToProject = this.goToProject.bind(this);\n  }\n\n  componentDidUpdate() {\n    if (this.state.experience) {\n      this.props.scrollToExperience();\n      this.setState({\n        experience: false\n      });\n    }\n\n    if (this.state.profile) {\n      this.props.setToTop();\n      this.setState({\n        profile: false\n      });\n    }\n\n    if (this.state.project) {\n      this.props.setToProject();\n      this.setState({\n        project: false\n      });\n    }\n  }\n\n  handleClick() {\n    //Flip to opposite of current state\n    this.setState({\n      open: !this.state.open\n    });\n  }\n\n  handleOpen() {\n    this.setState({\n      open: true\n    });\n  }\n\n  handleClose() {\n    this.setState({\n      open: false\n    });\n  }\n\n  testScroll() {\n    console.log(window.pageYOffset);\n  }\n\n  goToProfile() {\n    console.log(\"reached going to profile!\");\n    this.setState({\n      profile: true\n    });\n  }\n\n  goToExperience() {\n    console.log(\"going to experience!\");\n    this.setState({\n      experience: true\n    });\n  }\n\n  goToProject() {\n    this.setState({\n      project: true\n    });\n  }\n\n  render() {\n    let styles = {\n      speedDialIconStyle: {\n        color: \"white\",\n        backgroundColor: \"transparent\"\n      }\n    };\n    const {\n      classes\n    } = this.props;\n    return (\n      /*#__PURE__*/\n      // Create speed dial\n      React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(SpeedDial, {\n        ariaLabel: \"FABNav\",\n        classes: {\n          fab: classes.fab,\n          root: classes.root\n        },\n        icon: /*#__PURE__*/React.createElement(SpeedDialIcon, {\n          openIcon: /*#__PURE__*/React.createElement(MenuIcon, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 44\n            }\n          }),\n          style: styles.speedDialIconStyle,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 19\n          }\n        }),\n        open: this.state.open,\n        onMouseEnter: this.handleOpen,\n        onMouseLeave: this.handleClose,\n        direction: this.state.direction,\n        onFocus: this.handleOpen,\n        onClick: this.handleClick,\n        onClose: this.handleClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 9\n        }\n      }, \"// handle popup elements in speed dial\", /*#__PURE__*/React.createElement(SpeedDialAction, {\n        classes: {\n          button: classes.button\n        },\n        key: actions[0].name,\n        icon: actions[0].icon,\n        tooltipTitle: actions[0].name,\n        onClick: this.goToProfile,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(SpeedDialAction, {\n        classes: {\n          button: classes.button\n        },\n        key: actions[1].name,\n        icon: actions[1].icon,\n        tooltipTitle: actions[1].name,\n        onClick: this.goToExperience,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(SpeedDialAction, {\n        classes: {\n          button: classes.button\n        },\n        key: actions[2].name,\n        icon: actions[2].icon,\n        tooltipTitle: actions[2].name,\n        onClick: this.goToProject,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }\n      })))\n    );\n  }\n\n}\n\nFABNav.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(FABNav);","map":{"version":3,"sources":["C:/Users/Segal Au/Professional/site/personalsite/src/app/components/FABNav.js"],"names":["React","classNames","PropTypes","withStyles","SpeedDial","SpeedDialIcon","SpeedDialAction","QuestionAnswerIcon","FaceIcon","MenuIcon","BuildIcon","WorkIcon","AssignmentIcon","ExploreIcon","AppsIcon","ScrollableAnchor","configureAnchors","goToTop","goToAnchor","actions","icon","name","styles","theme","speedDialClass","button","background","color","fab","padding","margin","borderStyle","borderWidth","borderColor","FABNav","Component","constructor","props","state","open","direction","profile","experience","project","handleClick","bind","handleOpen","handleClose","goToProfile","goToExperience","goToProject","componentDidUpdate","scrollToExperience","setState","setToTop","setToProject","testScroll","console","log","window","pageYOffset","render","speedDialIconStyle","backgroundColor","classes","root","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport classNames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n/* Speed Dial Components */\r\nimport SpeedDial from '@material-ui/lab/SpeedDial';\r\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\r\nimport SpeedDialAction from '@material-ui/lab/SpeedDialAction';\r\n\r\n/* Icons */\r\nimport QuestionAnswerIcon from '@material-ui/icons/QuestionAnswer'\r\nimport FaceIcon from '@material-ui/icons/Face';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport BuildIcon from '@material-ui/icons/Build';\r\nimport WorkIcon from '@material-ui/icons/Work';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport ExploreIcon from '@material-ui/icons/Explore';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\n\r\n/* Anchor Scroll */\r\nimport ScrollableAnchor from 'react-scrollable-anchor'\r\nimport { configureAnchors } from 'react-scrollable-anchor'\r\nimport { goToTop } from 'react-scrollable-anchor'\r\nimport { goToAnchor } from 'react-scrollable-anchor'\r\n\r\n\r\n\r\nconst actions = [\r\n    {icon: <FaceIcon/>, name: \"About\"},\r\n    {icon: <WorkIcon/>, name: \"Experience\"},\r\n    {icon: <BuildIcon/>, name: \"Projects\"},\r\n    {icon: <AssignmentIcon/>, name: \"Resume\"},\r\n    {icon: <AppsIcon/>, name: \"Contact\"},\r\n];\r\n\r\nconst styles = theme => ({\r\n  speedDialClass : {\r\n  },\r\n\r\n  button: {\r\n    background: \"transparent\",\r\n    color: \"white\",\r\n    \"&:hover\" : {\r\n      background: \"transparent\",\r\n      color: \"#3f51b5\",\r\n    }\r\n  },\r\n\r\n  fab: {\r\n    padding: 0,\r\n    margin: 0,\r\n    borderStyle: \"solid\",\r\n    borderWidth: 2,\r\n    borderColor: \"white\",\r\n    background: \"transparent\",\r\n    \"&:hover\" : {\r\n      background: \"transparent\",\r\n    }\r\n  },\r\n\r\n});\r\n\r\nclass FABNav extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      open: false,\r\n      direction: \"down\",\r\n      profile: false,\r\n      experience: false,\r\n      project: false,\r\n    }\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.handleOpen = this.handleOpen.bind(this);\r\n    this.handleClose = this.handleClose.bind(this);\r\n    this.goToProfile = this.goToProfile.bind(this);\r\n    this.goToExperience = this.goToExperience.bind(this);\r\n    this.goToProfile = this.goToProfile.bind(this);\r\n    this.goToProject = this.goToProject.bind(this);\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    if(this.state.experience){\r\n      this.props.scrollToExperience();\r\n      this.setState({\r\n        experience:false,\r\n      });\r\n    }\r\n    if(this.state.profile){\r\n      this.props.setToTop();\r\n      this.setState({\r\n        profile: false,\r\n      })\r\n    }\r\n    if(this.state.project){\r\n      this.props.setToProject();\r\n      this.setState({\r\n        project: false,\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  handleClick(){\r\n    //Flip to opposite of current state\r\n    this.setState({\r\n      open: !this.state.open,\r\n    })\r\n  }\r\n\r\n  handleOpen(){\r\n\r\n      this.setState({\r\n        open: true,\r\n      })\r\n\r\n  }\r\n\r\n  handleClose(){\r\n\r\n      this.setState({\r\n        open: false,\r\n      })\r\n\r\n  }\r\n\r\n  testScroll(){\r\n    console.log(window.pageYOffset);\r\n  }\r\n\r\n  goToProfile(){\r\n    console.log(\"reached going to profile!\");\r\n    this.setState({\r\n      profile: true,\r\n    })\r\n  }\r\n\r\n  goToExperience(){\r\n    console.log(\"going to experience!\");\r\n    this.setState({\r\n      experience: true,\r\n    })\r\n  }\r\n\r\n  goToProject(){\r\n    this.setState({\r\n      project: true,\r\n    });\r\n  }\r\n\r\n\r\n  render(){\r\n\r\n    let styles = {\r\n      speedDialIconStyle: {\r\n        color: \"white\",\r\n        backgroundColor: \"transparent\",\r\n      }\r\n    }\r\n\r\n    const {classes} = this.props;\r\n\r\n\r\n    return(\r\n      // Create speed dial\r\n      <div>\r\n        <SpeedDial\r\n          ariaLabel=\"FABNav\"\r\n          classes = {{\r\n            fab: classes.fab,\r\n            root: classes.root,\r\n          }}\r\n          icon = {<SpeedDialIcon openIcon={<MenuIcon/>} style = {styles.speedDialIconStyle}/>}\r\n          open = {this.state.open}\r\n          onMouseEnter = {this.handleOpen}\r\n          onMouseLeave = {this.handleClose}\r\n          direction = {this.state.direction}\r\n          onFocus = {this.handleOpen}\r\n          onClick = {this.handleClick}\r\n          onClose = {this.handleClose}\r\n        >\r\n\r\n          // handle popup elements in speed dial\r\n\r\n          <SpeedDialAction\r\n            classes = {{\r\n              button: classes.button,\r\n            }}\r\n            key = {actions[0].name}\r\n            icon = {actions[0].icon}\r\n            tooltipTitle = {actions[0].name}\r\n            onClick = {this.goToProfile}\r\n          />\r\n          <SpeedDialAction\r\n            classes = {{\r\n              button: classes.button,\r\n            }}\r\n            key = {actions[1].name}\r\n            icon = {actions[1].icon}\r\n            tooltipTitle = {actions[1].name}\r\n            onClick = {this.goToExperience}\r\n          />\r\n          <SpeedDialAction\r\n            classes = {{\r\n              button: classes.button,\r\n            }}\r\n            key = {actions[2].name}\r\n            icon = {actions[2].icon}\r\n            tooltipTitle = {actions[2].name}\r\n            onClick = {this.goToProject}\r\n          />\r\n\r\n\r\n\r\n\r\n        </SpeedDial>\r\n      </div>\r\n\r\n\r\n    );\r\n  }\r\n}\r\n\r\nFABNav.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default withStyles(styles)(FABNav);\r\n"]},"metadata":{},"sourceType":"module"}