{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactSpring = require(\"react-spring\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _isFunction = _interopRequireDefault(require(\"lodash/isFunction\"));\n\nvar _throttleDebounce = require(\"throttle-debounce\");\n\nvar _resizeObserverPolyfill = _interopRequireDefault(require(\"resize-observer-polyfill\"));\n\nvar _scrollInitalState = _interopRequireDefault(require(\"./scrollInitalState\"));\n\nvar _nodeToScrollState = _interopRequireDefault(require(\"./nodeToScrollState\"));\n\nvar _nodeChildrenToScrollState = _interopRequireDefault(require(\"./nodeChildrenToScrollState\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar View = _reactSpring.Globals.defaultElement;\n\nvar Scroller = /*#__PURE__*/function (_Component) {\n  _inherits(Scroller, _Component);\n\n  function Scroller(props) {\n    var _this;\n\n    _classCallCheck(this, Scroller);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Scroller).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"createRef\", function (ref) {\n      _this.target = ref; // add component to resize observer to detect changes on resize\n\n      _this.resizeObserver = new _resizeObserverPolyfill.default(function (entries, observer) {\n        if (_this.state.ready) {\n          _this.handleResize();\n        } else {\n          _this.setStateScroll({\n            ready: true\n          });\n        }\n      });\n\n      if (_this.target) {\n        _this.resizeObserver.observe(_this.target);\n      }\n\n      _this.props.scrollRef(_this.connection);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"deleteRef\", function () {\n      if (_this.target) {\n        _this.resizeObserver.disconnect(_this.target);\n      }\n\n      _this.setStateScroll({\n        ready: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"setStateScroll\", function (additionalStates) {\n      var onScrollChange = _this.props.onScrollChange;\n\n      var newScroll = _objectSpread({}, _this.state.scroll, (0, _nodeToScrollState.default)(_this.target), (0, _nodeChildrenToScrollState.default)(_this.target), additionalStates);\n\n      _this.setState({\n        scroll: newScroll\n      });\n\n      if (onScrollChange) {\n        onScrollChange(newScroll);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"setStateScrollStart\", function (additionalStates) {\n      var position = _this.state.scroll.position;\n\n      _this.setStateScroll(_objectSpread({\n        originalPosition: position,\n        timeStamp: Date.now()\n      }, additionalStates));\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"setStateScrollMove\", function (additionalStates) {\n      _this.setStateScroll(_objectSpread({\n        moving: true,\n        resting: false\n      }, additionalStates));\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"setStateScrollRest\", function (additionalStates) {\n      _this.setStateScroll(_objectSpread({\n        moving: false,\n        resting: true\n      }, additionalStates));\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"setStateScrollEnd\", function (additionalStates) {\n      _this.setStateScroll(_objectSpread({\n        originalPosition: null,\n        changedPosition: null,\n        timeStamp: null\n      }, additionalStates));\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"findChildOnView\", function () {\n      var children = _this.state.scroll.children;\n      return children.find(function (child) {\n        return child.onView;\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"findChildIndexOnView\", function () {\n      var children = _this.state.scroll.children;\n      return children.findIndex(function (child) {\n        return child.onView;\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"scrollToPosition\", function (position) {\n      _this.controller.update({\n        scroll: position,\n        onFrame: function onFrame(_ref) {\n          var scroll = _ref.scroll;\n          return _this.target.scrollTop = scroll;\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"scrollToByIndex\", function (index) {\n      var children = _this.state.scroll.children;\n\n      _this.scrollToPosition(children[index].start);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"scrollToTop\", function () {\n      var start = _this.state.scroll.start;\n\n      _this.scrollToPosition(start);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"scrollToBottom\", function () {\n      var end = _this.state.scroll.end;\n\n      _this.scrollToPosition(end);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"previousOfIndex\", function () {\n      var i = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.findChildIndexOnView();\n      var arr = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _this.state.scroll.children;\n      return arr[i > 0 ? i - 1 : i];\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"nextOfIndex\", function () {\n      var i = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.findChildIndexOnView();\n      var arr = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _this.state.scroll.children;\n      return arr[i < arr.length - 1 ? i + 1 : i];\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"scrollToPrev\", function () {\n      var prevPosition = _this.previousOfIndex().start;\n\n      _this.scrollToPosition(prevPosition);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"scrollToNext\", function () {\n      var nextPosition = _this.nextOfIndex().start;\n\n      _this.scrollToPosition(nextPosition);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"scrollToElement\", function (element, options) {\n      var start = element.scrollTop;\n\n      _this.scrollToPosition(start);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"scrollToActive\", function () {\n      var newPosition = _this.findChildOnView().start;\n\n      _this.scrollToPosition(newPosition);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleScroll\", function () {\n      _this.handleScrollStart();\n\n      _this.handleScrollMove();\n\n      _this.handleScrollEnd();\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleScrollStart\", function () {\n      _this.setStateScrollMove();\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleScrollMove\", function () {\n      _this.setStateScroll();\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleScrollEnd\", function () {\n      _this.setStateScrollRest();\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleResize\", function () {\n      _this.handleResizeStart();\n\n      _this.handleResizeMove();\n\n      _this.handleResizeEnd();\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleResizeStart\", function () {\n      _this.setStateScrollMove();\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleResizeMove\", function () {\n      _this.handleScroll();\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleResizeEnd\", function () {\n      var autoFrame = _this.props.autoFrame;\n\n      if (autoFrame) {\n        _this.scrollToActive();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleWheel\", function (e) {\n      var autoScroll = _this.props.autoScroll;\n\n      if (autoScroll) {\n        e.preventDefault();\n      }\n\n      _this.handleWheelStart(e);\n\n      _this.handleWheelMove(e);\n\n      _this.handleWheelEnd(e);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleWheelStart\", function (e) {\n      var autoScroll = _this.props.autoScroll;\n      var changedPosition = _this.state.scroll.changedPosition;\n\n      _this.setStateScrollStart({\n        wheeling: true,\n        changedPosition: !autoScroll ? null : changedPosition\n      });\n\n      if (autoScroll) {\n        var movingUpwards = e.deltaY > 0;\n        var movingDownwards = e.deltaY < 0;\n        if (movingDownwards) _this.scrollToPrevDebounced();\n        if (movingUpwards) _this.scrollToNextDebounced();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleWheelMove\", function (e) {\n      var autoScroll = _this.props.autoScroll;\n\n      if (autoScroll) {\n        var prev = _this.state.deltaY;\n        var next = e.deltaY;\n        var changed = Math.abs(next) > Math.abs(prev);\n\n        if (changed) {\n          var movingUpwards = next > 0;\n          var movingDownwards = next < 0;\n\n          if (movingDownwards) {\n            _this.scrollToPrevDebounced();\n          }\n\n          if (movingUpwards) {\n            _this.scrollToNextDebounced();\n          }\n        }\n      }\n\n      _this.setState({\n        deltaY: e.deltaY\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleWheelEnd\", function (e) {\n      var autoFrame = _this.state.scroll.autoFrame;\n\n      _this.setStateScrollEnd({\n        wheeling: false,\n        deltaY: null\n      });\n\n      if (autoFrame) _this.scrollToActive();\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleTouchStart\", function (e) {\n      _this.setStateScrollStart({\n        touching: true,\n        touches: e.touches\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleTouchMove\", function (e) {\n      var _this$state$scroll = _this.state.scroll,\n          touches = _this$state$scroll.touches,\n          originalPosition = _this$state$scroll.originalPosition;\n      var distanceFromTouchStart = e.changedTouches[0].clientY - touches[0].clientY;\n      var touchPosition = originalPosition - distanceFromTouchStart;\n\n      _this.scrollToPosition(touchPosition);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleTouchEnd\", function (e) {\n      var _this$state$scroll2 = _this.state.scroll,\n          timeStamp = _this$state$scroll2.timeStamp,\n          touches = _this$state$scroll2.touches;\n      var timeLapse = Date.now() - timeStamp;\n\n      if (timeLapse < 200) {\n        var movingUpwards = e.changedTouches[0].clientY < touches[0].clientY;\n        var movingDownwards = e.changedTouches[0].clientY > touches[0].clientY;\n        if (movingDownwards) _this.scrollToPrev();\n        if (movingUpwards) _this.scrollToNext();\n      } else {\n        _this.scrollToActive();\n      }\n\n      _this.setStateScroll({\n        touching: false\n      });\n    });\n\n    _this.state = {\n      scroll: _scrollInitalState.default // debounce is used to mimiques start, move and end events that don't have this functions\n\n    };\n    _this.handleScrollStart = (0, _throttleDebounce.debounce)(500, true, _this.handleScrollStart);\n    _this.handleResizeMove = (0, _throttleDebounce.throttle)(50, _this.handleResizeMove);\n    _this.handleScrollEnd = (0, _throttleDebounce.debounce)(500, _this.handleScrollEnd);\n    _this.handleWheelStart = (0, _throttleDebounce.debounce)(100, true, _this.handleWheelStart);\n    _this.handleWheelEnd = (0, _throttleDebounce.debounce)(100, _this.handleWheelEnd);\n    _this.handleResizeStart = (0, _throttleDebounce.debounce)(250, true, _this.handleResizeStart);\n    _this.handleResizeEnd = (0, _throttleDebounce.debounce)(250, _this.handleResizeEnd);\n    _this.scrollToPrevDebounced = (0, _throttleDebounce.debounce)(250, true, _this.scrollToPrev);\n    _this.scrollToNextDebounced = (0, _throttleDebounce.debounce)(250, true, _this.scrollToNext);\n    _this.controller = new _reactSpring.Controller({\n      scroll: 0\n    });\n    return _this;\n  }\n\n  _createClass(Scroller, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.deleteRef();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          autoFrame = _this$props.autoFrame,\n          autoScroll = _this$props.autoScroll,\n          ScrollerNavigation = _this$props.ScrollerNavigation;\n      var scroll = this.connection;\n      return _react.default.createElement(ScrollerContainer, null, _react.default.createElement(ScrollerNavigation, {\n        scroll: scroll\n      }), _react.default.createElement(ScrollerContent, {\n        scrollRef: this.createRef,\n        scroll: this.state.scroll,\n        onScroll: this.handleScroll,\n        onWheel: this.handleWheel,\n        onTouchStart: this.handleTouchStart,\n        onTouchMove: this.handleTouchMove,\n        onTouchEnd: this.handleTouchEnd\n      }, (0, _isFunction.default)(children) ? children(scroll) : children));\n    }\n  }, {\n    key: \"connection\",\n    get: function get() {\n      return _objectSpread({}, this.state.scroll, {\n        target: this.target,\n        autoFrame: this.props.autoFrame,\n        autoScroll: this.props.autoScroll,\n        scrollToPosition: this.scrollToPosition,\n        scrollToByIndex: this.scrollToByIndex,\n        scrollToTop: this.scrollToTop,\n        scrollToBottom: this.scrollToBottom,\n        scrollToPrev: this.scrollToPrev,\n        scrollToNext: this.scrollToNext,\n        scrollToElement: this.scrollToElement,\n        scrollToActive: this.scrollToActive\n      });\n    }\n  }]);\n\n  return Scroller;\n}(_react.Component);\n\nexports.default = Scroller;\n\n_defineProperty(Scroller, \"defaultProps\", {\n  autoFrame: false,\n  autoScroll: false,\n  ScrollerNavigation: function ScrollerNavigation() {\n    return null;\n  }\n});\n\nvar containerStyle = {\n  height: '100%',\n  width: '100%'\n};\n\nvar ScrollerContainer = /*#__PURE__*/function (_PureComponent) {\n  _inherits(ScrollerContainer, _PureComponent);\n\n  function ScrollerContainer() {\n    _classCallCheck(this, ScrollerContainer);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ScrollerContainer).apply(this, arguments));\n  }\n\n  _createClass(ScrollerContainer, [{\n    key: \"render\",\n    value: function render() {\n      return _react.default.createElement(View, _extends({\n        style: containerStyle\n      }, this.props));\n    }\n  }]);\n\n  return ScrollerContainer;\n}(_react.PureComponent);\n\nvar ScrollerContent = /*#__PURE__*/function (_PureComponent2) {\n  _inherits(ScrollerContent, _PureComponent2);\n\n  function ScrollerContent() {\n    _classCallCheck(this, ScrollerContent);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ScrollerContent).apply(this, arguments));\n  }\n\n  _createClass(ScrollerContent, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          scroll = _this$props2.scroll,\n          scrollRef = _this$props2.scrollRef,\n          autoFrame = _this$props2.autoFrame,\n          autoScroll = _this$props2.autoScroll,\n          props = _objectWithoutProperties(_this$props2, [\"scroll\", \"scrollRef\", \"autoFrame\", \"autoScroll\"]);\n\n      var style = {\n        height: '100%',\n        width: '100%',\n        overflowY: autoScroll || scroll.touching ? 'hidden' : 'auto' // TODO: investigar glich on touchScroll with overFlow\n        // overflowScrolling: 'touch',\n        // WebkitOverflowScrolling: 'touch',\n        // overflowY: !autoScroll && !touching ? 'auto' : 'hidden',\n\n      };\n      return _react.default.createElement(View, _extends({\n        ref: scrollRef,\n        style: style\n      }, props));\n    }\n  }]);\n\n  return ScrollerContent;\n}(_react.PureComponent);","map":null,"metadata":{},"sourceType":"script"}